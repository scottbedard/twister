function t(t,r){return o(t,r).shift()}function r(t,r){return new Array(t).fill(r)}function e(t){return o(t).reverse()}function n(t,r){const e=(r%t.length+t.length)%t.length;return t.slice(e).concat(t.slice(0,e))}function o(t,r,e){return t.slice(r,e)}function s(t,r,e,...n){return t.splice(r,e,...n)}function c(t,r){if(!Number.isInteger(t)||t<3)throw new Error("Polygon sides must be an integer of 3 or greater");if(!Number.isInteger(r)||r<2)throw new Error("Polygon layers must be an integer of 2 or greater");if(3===t)throw new Error("Pyramids are not implemented yet");const e=[];for(let n=0,o=Math.floor(r/2);n<o;n++){const o=(r-2*n-1)*t;for(let t=0;t<o;t++)e.push({center:!1,currentIndex:t,depth:n,meta:{},originalIndex:t})}return r%2&&e.push({center:!0,currentIndex:0,depth:Math.floor(r/2),meta:{},originalIndex:0}),{layers:r,sides:t,stickers:e}}function i(t,r,e){if(!Number.isInteger(r)||r<0)throw new Error("Slice depth must be a positive integer");if(!Number.isInteger(e)||e<0)throw new Error("Slice angle must be a positive integer");return[]}function a(t,r){if(!Number.isInteger(r))throw new Error("Face rotations must be an integer");const e=[];r%=t.sides;for(let o=0,s=Math.floor(t.layers/2);o<=s;o++){const s=t.stickers.filter(t=>t.depth===o);if(r&&s.length>1){const o=s.length/t.sides*-r;o&&e.push(...n(s,o))}else e.push(...s)}return Object.assign(Object.assign({},t),{stickers:e})}function u(t){return F(f(t))}function f(t){const e=Math.sqrt(t.length);return r(e).map((r,n)=>{const s=n*e;return o(t,s,s+e)})}function l(t,e){return r(e).map((r,e)=>({data:null,originalIndex:e,value:t}))}function h(t){return B(F(t))}function B(t){return t.reduce((t,r)=>t.concat(r),[])}function F(t){return t[0].map((r,e)=>t.map(t=>t[e]))}function D(t,r){const{depth:e,wide:n}=t;for(let t=e,o=n?0:e-1;t>o;t--)r(t,-t,t-1)}function L(t,r){return-1===r?B(e(u(t))):2===r?e(t):h(e(f(t)))}function R(t){return{U:{r:f(t.U),c:u(t.U)},L:{r:f(t.L),c:u(t.L)},F:{r:f(t.F),c:u(t.F)},R:{r:f(t.R),c:u(t.R)},B:{r:f(t.B),c:u(t.B)},D:{r:f(t.D),c:u(t.D)}}}function U(t){return t}function p(t){return t.trim()}class g extends class{constructor(t){this.options=t,this.reset()}turn(t){t.split(" ").map(p).filter(U).map(t=>this.parseTurn(t)).forEach(t=>this.applyTurn(t))}}{constructor(t){if(!Number.isInteger(t.size))throw new Error("Cube size must be an integer");if(t.size<2)throw new Error("Cube size must be two or greater");super(t)}applyTurn(r){const{target:n}=r;if("X"===n)this.state=function({U:t,L:r,F:n,R:s,B:c,D:i},{rotation:a}){return-1===a?{U:e(c),L:L(r,1),F:o(t),R:L(s,-1),B:e(i),D:o(n)}:2===a?{U:o(i),L:L(r,2),F:e(c),R:L(s,2),B:e(n),D:o(t)}:{U:o(n),L:L(r,-1),F:o(i),R:L(s,1),B:e(t),D:e(c)}}(this.state,r);else if("Y"===n)this.state=function({U:t,L:r,F:e,R:n,B:s,D:c},{rotation:i}){return-1===i?{U:L(t,-1),L:o(s),F:o(r),R:o(e),B:o(n),D:L(c,1)}:2===i?{U:L(t,2),L:o(n),F:o(s),R:o(r),B:o(e),D:L(c,2)}:{U:L(t,1),L:o(e),F:o(n),R:o(s),B:o(r),D:L(c,-1)}}(this.state,r);else if("Z"===n)this.state=function({U:t,L:r,F:n,R:o,B:s,D:c},{rotation:i}){return-1===i?{U:L(o,-1),L:L(t,-1),F:L(n,-1),R:L(c,-1),B:L(s,1),D:L(r,-1)}:2===i?{U:e(c),L:e(o),F:L(n,2),R:e(r),B:L(s,2),D:e(t)}:{U:L(r,1),L:L(c,1),F:L(n,1),R:L(t,1),B:L(s,-1),D:L(o,1)}}(this.state,r);else{const n=function(t){const{target:r}=t;switch(r){case"U":return"U";case"L":return"L";case"F":return"F";case"R":return"R";case"B":return"B";case"D":return"D"}}(r);switch((1===r.depth||r.wide)&&(this.state[n]=L(this.state[n],r.rotation)),n){case"U":!function(r,e){const n=R(r);D(e,(o,c,i)=>{const a=t(n.B.r,i),u=t(n.R.r,i),f=t(n.F.r,i),l=t(n.L.r,i);let h,F,D,L;2===e.rotation?(h=f,F=l,D=a,L=u):-1===e.rotation?(h=u,F=f,D=l,L=a):(h=l,F=a,D=u,L=f),s(n.B.r,i,1,h),s(n.R.r,i,1,F),s(n.F.r,i,1,D),s(n.L.r,i,1,L),r.B=B(n.B.r),r.R=B(n.R.r),r.F=B(n.F.r),r.L=B(n.L.r)})}(this.state,r);break;case"L":!function(r,n){const o=R(r);D(n,(c,i,a)=>{const u=t(o.U.c,a),f=t(o.F.c,a),l=t(o.D.c,a),B=t(o.B.c,i);let F,D,L,R;2===n.rotation?(F=l,D=e(B),L=u,R=e(f)):-1===n.rotation?(F=f,D=l,L=e(B),R=e(u)):(F=e(B),D=u,L=f,R=e(l)),s(o.U.c,a,1,F),s(o.F.c,a,1,D),s(o.D.c,a,1,L),s(o.B.c,i,1,R),r.U=h(o.U.c),r.F=h(o.F.c),r.D=h(o.D.c),r.B=h(o.B.c)})}(this.state,r);break;case"F":!function(r,n){const o=R(r);D(n,(c,i,a)=>{const u=t(o.U.r,i),f=t(o.R.c,a),l=t(o.D.r,a),F=t(o.L.c,i);let D,L,R,U;2===n.rotation?(D=e(l),L=e(F),R=e(u),U=e(f)):-1===n.rotation?(D=f,L=e(l),R=F,U=e(u)):(D=e(F),L=u,R=e(f),U=l),s(o.U.r,i,1,D),s(o.R.c,a,1,L),s(o.D.r,a,1,R),s(o.L.c,i,1,U),r.U=B(o.U.r),r.R=h(o.R.c),r.D=B(o.D.r),r.L=h(o.L.c)})}(this.state,r);break;case"R":!function(r,n){const o=R(r);D(n,(c,i,a)=>{const u=t(o.U.c,i),f=t(o.B.c,a),l=t(o.D.c,i),B=t(o.F.c,i);let F,D,L,R;2===n.rotation?(F=l,D=e(B),L=u,R=e(f)):-1===n.rotation?(F=e(f),D=e(l),L=B,R=u):(F=B,D=e(u),L=e(f),R=l),s(o.U.c,i,1,F),s(o.B.c,a,1,D),s(o.D.c,i,1,L),s(o.F.c,i,1,R),r.U=h(o.U.c),r.B=h(o.B.c),r.D=h(o.D.c),r.F=h(o.F.c)})}(this.state,r);break;case"B":!function(r,n){const o=R(r);D(n,(c,i,a)=>{const u=t(o.U.r,a),f=t(o.L.c,a),l=t(o.D.r,i),F=t(o.R.c,i);let D,L,R,U;2===n.rotation?(D=e(l),L=e(F),R=e(u),U=e(f)):-1===n.rotation?(D=e(f),L=l,R=e(F),U=u):(D=F,L=e(u),R=f,U=e(l)),s(o.U.r,c-1,1,D),s(o.L.c,c-1,1,L),s(o.D.r,i,1,R),s(o.R.c,i,1,U),r.U=B(o.U.r),r.L=h(o.L.c),r.D=B(o.D.r),r.R=h(o.R.c)})}(this.state,r);break;case"D":!function(r,e){const n=R(r);D(e,(o,c)=>{const i=t(n.F.r,c),a=t(n.R.r,c),u=t(n.B.r,c),f=t(n.L.r,c);let l,h,F,D;2===e.rotation?(l=u,h=f,F=i,D=a):-1===e.rotation?(l=a,h=u,F=f,D=i):(l=f,h=i,F=a,D=u),s(n.F.r,c,1,l),s(n.R.r,c,1,h),s(n.B.r,c,1,F),s(n.L.r,c,1,D),r.F=B(n.F.r),r.R=B(n.R.r),r.B=B(n.B.r),r.L=B(n.L.r)})}(this.state,r)}}}isSolved(){return!1}parseTurn(t){return function(t){const r=t.match(/^(\d)*([ulfrbdxyzULFRBDXYZ]){1}(w)*(['-2])*$/);if(null===r)throw new Error(`Invalid turn: ${t}`);const e=r[4],n=r[2],o=Boolean(r[3]);let s=r[1]?parseInt(r[1],10):1;o&&(s=Math.max(2,s));let c=1;return"-"===e||"'"===e?c=-1:"2"===e&&(c=2),{depth:s,rotation:c,target:n,wide:o}}(t)}reset(){const t=Math.pow(this.options.size,2);this.state={U:l(0,t),L:l(1,t),F:l(2,t),R:l(3,t),B:l(4,t),D:l(5,t)}}}export{g as Cube,c as createFace,i as extractSlice,a as rotateFace};
